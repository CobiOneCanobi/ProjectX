//transform mixin
@mixin transform($property: none) {
  // none | <transform-function>
  @include prefixer(transform, $property, webkit moz ms o spec);
}

@mixin transform-origin($axes: 50%) {
  // x-axis - left | center | right  | length | %
  // y-axis - top  | center | bottom | length | %
  // z-axis -                          length
  @include prefixer(transform-origin, $axes, webkit moz ms o spec);
}

@mixin transform-style($style: flat) {
  @include prefixer(transform-style, $style, webkit moz ms o spec);
}


//transition mixin
// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.
// Example: @include transition (all 2s ease-in-out);
//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);
//          @include transition-property (transform, opacity);

@mixin transition($properties...) {
  // Fix for vendor-prefix transform property
  $needs-prefixes: false;
  $webkit: ();
  $moz: ();
  $spec: ();

  // Create lists for vendor-prefixed transform
  @each $list in $properties {
    @if nth($list, 1) == "transform" {
      $needs-prefixes: true;
      $list1: -webkit-transform;
      $list2: -moz-transform;
      $list3: ();

      @each $var in $list {
        $list3: join($list3, $var);

        @if $var != "transform" {
          $list1: join($list1, $var);
          $list2: join($list2, $var);
        }
      }

      $webkit: append($webkit, $list1);
      $moz:    append($moz,    $list2);
      $spec:   append($spec,   $list3);
    } @else {
      $webkit: append($webkit, $list, comma);
      $moz:    append($moz,    $list, comma);
      $spec:   append($spec,   $list, comma);
    }
  }

  @if $needs-prefixes {
    -webkit-transition: $webkit;
       -moz-transition: $moz;
            transition: $spec;
  } @else {
    @if length($properties) >= 1 {
      @include prefixer(transition, $properties, webkit moz spec);
    } @else {
      $properties: all 0.15s ease-out 0s;
      @include prefixer(transition, $properties, webkit moz spec);
    }
  }
}

@mixin transition-property($properties...) {
  -webkit-transition-property: transition-property-names($properties, "webkit");
     -moz-transition-property: transition-property-names($properties, "moz");
          transition-property: transition-property-names($properties, false);
}

@mixin transition-duration($times...) {
  @include prefixer(transition-duration, $times, webkit moz spec);
}

@mixin transition-timing-function($motions...) {
  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()
  @include prefixer(transition-timing-function, $motions, webkit moz spec);
}

@mixin transition-delay($times...) {
  @include prefixer(transition-delay, $times, webkit moz spec);
}



//sliding-menu
.sliding-menu-content {
  ///////////////////////////////////////////////////////////////////////////////////
  $base-accent-color: #477DCA !default;
  $dark-gray: #333 !default;

  ul {
    padding: 0;
    margin: 0;
  }

  li {
    list-style: none;
  }

  a {
    text-decoration: none;
  }
  //////////////////////////////////////////////////////////////////////////////////

  $sliding-menu-border-color: $dark-gray;
  $sliding-menu-background: lighten($sliding-menu-border-color, 5%);
  $sliding-menu-color: #fff;
  $sliding-menu-border: 1px solid $sliding-menu-border-color;
  $sliding-menu-background-hover: $base-accent-color;
  $sliding-menu-color-hover: #fff;
  $sliding-menu-background-focus: lighten($sliding-menu-background, 5%);

  @include position(fixed, 0px auto 0px 0px);
  // @include size(220px 100%);
  @include transform(translateX(-220px));
  @include transition(all 0.25s linear);
  background: $sliding-menu-background;
  z-index: 999999;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;

  li a {
    border-bottom: $sliding-menu-border;
    color: $sliding-menu-color;
    display: block;
    font-weight: bold;
    padding: 1em;

    &:focus {
      background-color: $sliding-menu-background-focus;
    }

    &:hover {
      background-color: $sliding-menu-background-hover;
      color: $sliding-menu-color-hover;
    }
  }

  &.is-visible {
    @include transform(translateX(0));
  }
}

.sliding-menu-fade-screen {
  @include position(fixed, 0px 0px 0px 0px);
  @include transition;
  background: black;
  opacity: 0;
  visibility: hidden;
  z-index: 999998;

  &.is-visible {
    opacity: 0.4;
    visibility: visible;
  }
}

.sliding-menu-button {
  // @include button(flat, #477DCA);
  padding: 10px 16px;
  display: inline-block;
  cursor: pointer;
  position: relative;
  outline: none;

  img {
    height: 1.3em;
  }
}

// Based on code by Diego Eis
